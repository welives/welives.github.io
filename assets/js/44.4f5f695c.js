(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{411:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"regexp-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-对象"}},[t._v("#")]),t._v(" RegExp 对象")]),t._v(" "),a("p",[t._v("程序员必备的知识")]),t._v(" "),a("p",[t._v("最起码要能写出常用替换、匹配的正则，实在不行也要能看懂的")]),t._v(" "),a("h2",{attrs:{id:"创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),a("p",[t._v("有两种方法，字面量和构造函数模式")]),t._v(" "),a("ul",[a("li",[t._v("字面量")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/g")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'789456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("ul",[a("li",[t._v("构造函数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1234444456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'asdsa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h2",{attrs:{id:"元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),a("ul",[a("li",[t._v("单个字符数字\n"),a("ul",[a("li",[a("code",[t._v(".")]),t._v("：匹配除换行符以外的任意字符")]),t._v(" "),a("li",[a("code",[t._v("[a-zA-Z0-9]")]),t._v("与"),a("code",[t._v("[^a-zA-Z0-9]")]),t._v("：匹配方括号中的任意字符，前面加"),a("code",[t._v("^")]),t._v("是匹配不在方括号中的任意字符")]),t._v(" "),a("li",[a("code",[t._v("\\d")]),t._v("：匹配一个数字字符。等价于"),a("code",[t._v("[0-9]")])]),t._v(" "),a("li",[a("code",[t._v("\\D")]),t._v("：匹配一个非数字字符。等价于"),a("code",[t._v("[^0-9]")])]),t._v(" "),a("li",[a("code",[t._v("\\w")]),t._v("：匹配字母、数字、下划线。等价于"),a("code",[t._v("[A-Za-z0-9_]")])]),t._v(" "),a("li",[a("code",[t._v("\\W")]),t._v("：匹配非字母、数字、下划线。等价于"),a("code",[t._v("[^A-Za-z0-9_]")])])])]),t._v(" "),a("li",[t._v("空白字符\n"),a("ul",[a("li",[a("code",[t._v("\\f")]),t._v("：匹配换页符。等价于"),a("code",[t._v("\\x0c")]),t._v("和"),a("code",[t._v("\\cL")])]),t._v(" "),a("li",[a("code",[t._v("\\r")]),t._v("：匹配回车符。等价于"),a("code",[t._v("\\x0d")]),t._v("和"),a("code",[t._v("\\cM")])]),t._v(" "),a("li",[a("code",[t._v("\\n")]),t._v("：匹配换行符。等价于"),a("code",[t._v("\\x0a")]),t._v("和"),a("code",[t._v("\\cJ")])]),t._v(" "),a("li",[a("code",[t._v("\\t")]),t._v("：匹配制表符。等价于"),a("code",[t._v("\\x09")]),t._v("和"),a("code",[t._v("\\cI")])]),t._v(" "),a("li",[a("code",[t._v("\\O")]),t._v("：匹配 null 字符")]),t._v(" "),a("li",[a("code",[t._v("\\s")]),t._v("：匹配任何空白字符，包括空格、制表符、换页符等。等价于"),a("code",[t._v("[ \\f\\n\\r\\t\\v]")])]),t._v(" "),a("li",[a("code",[t._v("\\S")]),t._v("：匹配任何非空白字符。等价于"),a("code",[t._v("[^ \\f\\n\\r\\t\\v]")])])])]),t._v(" "),a("li",[t._v("定位符\n"),a("ul",[a("li",[a("code",[t._v("^")]),t._v("：行首匹配")]),t._v(" "),a("li",[a("code",[t._v("$")]),t._v("：行尾匹配")]),t._v(" "),a("li",[a("code",[t._v("\\A")]),t._v("：匹配字符串的开始处或行首")]),t._v(" "),a("li",[a("code",[t._v("\\b")]),t._v("：匹配单词边界，词在[]内无效")]),t._v(" "),a("li",[a("code",[t._v("\\B")]),t._v("：匹配非单词边界")]),t._v(" "),a("li",[a("code",[t._v("G")]),t._v("：匹配当前搜索的开始位置")]),t._v(" "),a("li",[a("code",[t._v("\\Z")]),t._v("：匹配字符串的结束处或行尾")]),t._v(" "),a("li",[a("code",[t._v("\\z")]),t._v("：只匹配字符串结束处")])])]),t._v(" "),a("li",[t._v("限定符\n"),a("ul",[a("li",[a("code",[t._v("x?")]),t._v("：匹配 0 个或一个 x")]),t._v(" "),a("li",[a("code",[t._v("x*")]),t._v("：匹配 0 个或者任意多个 x")]),t._v(" "),a("li",[a("code",[t._v("x+")]),t._v("：匹配一个或者多个")]),t._v(" "),a("li",[a("code",[t._v("x{m,n}")]),t._v("：匹配 m-n 个 x")])])]),t._v(" "),a("li",[t._v("分组\n"),a("ul",[a("li",[a("code",[t._v("(?:x)")]),t._v("：匹配 x 但不记录匹配结果（匹配不捕获）")]),t._v(" "),a("li",[a("code",[t._v("x(?=y)")]),t._v("：当 x 后面接 y 时匹配 x")]),t._v(" "),a("li",[a("code",[t._v("x(?!y)")]),t._v("：当 x 后不是 y 时匹配 x")])])]),t._v(" "),a("li",[t._v("引用\n"),a("ul",[a("li",[a("code",[t._v("\\1...\\9 $1...$9")]),t._v("：返回 9 个在模式匹配期间找到的，最近保存的部分")])])]),t._v(" "),a("li",[t._v("或模式\n"),a("ul",[a("li",[a("code",[t._v("x|y|z")]),t._v("：匹配 x 或者 y 或者 z")])])])]),t._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("p",[t._v("可以记 img，这样方便记住")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("i")]),t._v("：忽略大小写模式")]),t._v(" "),a("li",[a("code",[t._v("m")]),t._v("：多行匹配")]),t._v(" "),a("li",[a("code",[t._v("g")]),t._v("：全局模式")])]),t._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[t._v("实例属性\n"),a("ul",[a("li",[a("code",[t._v("global")]),t._v("：布尔值，检测是否设置了"),a("code",[t._v("g")]),t._v("标记")]),t._v(" "),a("li",[a("code",[t._v("ignoreCase")]),t._v("：布尔值，检测是否设置了"),a("code",[t._v("i")]),t._v("标记")]),t._v(" "),a("li",[a("code",[t._v("multiline")]),t._v("：布尔值，检测是否设置了"),a("code",[t._v("m")]),t._v("标记")]),t._v(" "),a("li",[a("code",[t._v("lastIndex")]),t._v("：整数，表示开始搜索下一个匹配项的字符位置，从 0 算起")]),t._v(" "),a("li",[a("code",[t._v("source")]),t._v("：返回正则表达式的字符串表示，按照字面量形式而非传入构造函数中的字符串模式返回")])])])]),t._v(" "),a("p",[t._v("通过这些属性可以获知一个正则表达式的各方面信息，但却没有多大用处，因为这些信息全都包含在模式声明中")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\[bc\\]at/i")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ignoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \\[bc\\]at")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\[bc\\\\]at'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ignoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \\[bc\\]at")]),t._v("\n")])])]),a("p",[t._v("尽管第一个模式使用的是字面量，第二个模式使用了"),a("code",[t._v("RegExp")]),t._v("构造函数，但它们的"),a("code",[t._v("source")]),t._v("属性是相同的。可见， "),a("code",[t._v("source")]),t._v("属性保存的是规范形式的字符串，即字面量形式所用的字符串")]),t._v(" "),a("ul",[a("li",[t._v("构造函数属性\n"),a("ul",[a("li",[a("code",[t._v("$_ input")]),t._v("：返回最近一次匹配的字符串")]),t._v(" "),a("li",[a("code",[t._v("$& lastMatch")]),t._v("：返回最近一次的匹配项")]),t._v(" "),a("li",[a("code",[t._v("$+ lastParen")]),t._v("：返回最近一次匹配的捕获组")]),t._v(" "),a("li",[t._v("$` leftContext：返回被查找的字符串中从字符串开始位置到最后匹配之前的位置之间的字符")]),t._v(" "),a("li",[a("code",[t._v("$' rightContext")]),t._v("：返回被搜索的字符串中从最后一个匹配位置开始到字符串结尾之间的字符")]),t._v(" "),a("li",[a("code",[t._v("$* multiline")]),t._v("：检测表达式是否采用多行匹配"),a("code",[t._v("m")])])])])]),t._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("实例方法\n"),a("ul",[a("li",[a("code",[t._v("test")]),t._v("：在字符串中检测模式匹配，返回 true 或 false")]),t._v(" "),a("li",[a("code",[t._v("exec")]),t._v("：该方法是专门为捕获组而设计的\n"),a("ul",[a("li",[t._v("功能：正则捕获的数据，一个数组")]),t._v(" "),a("li",[t._v("参数：要应用模式匹配的字符串")]),t._v(" "),a("li",[t._v("特性：\n"),a("ul",[a("li",[t._v("使用全局标记"),a("code",[t._v("g")]),t._v("；持续查找所有匹配项并返回")]),t._v(" "),a("li",[t._v("不使用全局标记"),a("code",[t._v("g")]),t._v("；始终返回第一个匹配项信息")])])]),t._v(" "),a("li",[t._v("执行的过程\n"),a("ul",[a("li",[t._v("检测字符串参数，获取正则表达式匹配文本")]),t._v(" "),a("li",[t._v("找到匹配文本则返回一个数组\n"),a("ul",[a("li",[t._v("第 0 个元素：与整个模式匹配的字符串")]),t._v(" "),a("li",[t._v("其他元素：与捕获组匹配的字符串")])])]),t._v(" "),a("li",[t._v("否则返回 null")])])]),t._v(" "),a("li",[t._v("派生属性\n"),a("ul",[a("li",[a("code",[t._v("index")]),t._v("：匹配项在字符串中的位置")]),t._v(" "),a("li",[a("code",[t._v("input")]),t._v("：应用正则表达式的字符串")]),t._v(" "),a("li",[a("code",[t._v("length")]),t._v("：返回数组元素的个数")])])])])])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/.at/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cat")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'------------------------'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/.at/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cat")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'------------------------'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bat")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("第一个模式"),a("code",[t._v("pattern1")]),t._v("不是全局模式，因此每次调用"),a("code",[t._v("exec()")]),t._v("返回的都是第一个匹配项 "),a("strong",[t._v("cat")]),t._v(" 。而第二个模式 "),a("code",[t._v("pattern2")]),t._v("是全局模式，因此每次调用"),a("code",[t._v("exec()")]),t._v("都会返回字符串中的下一个匹配项，直至搜索到字符串末尾为止。此外，还应该注意模式的"),a("code",[t._v("lastIndex")]),t._v("属性的变化情况。在全局匹配模式下，"),a("code",[t._v("lastIndex")]),t._v("的值在每次调用"),a("code",[t._v("exec()")]),t._v("后都会增加，而在非全局模式下则始终保持不变")]),t._v(" "),a("blockquote",[a("p",[t._v("IE 的 JavaScript 实现在"),a("code",[t._v("lastIndex")]),t._v("属性上存在偏差，即使在非全局模式下，"),a("code",[t._v("lastIndex")]),t._v("属性每次也会变化")])]),t._v(" "),a("ul",[a("li",[t._v("字符串方法\n"),a("ul",[a("li",[a("code",[t._v("match")]),t._v("：找到一个或者多个正则表达式的匹配")]),t._v(" "),a("li",[a("code",[t._v("replace")]),t._v("：替换与正则表达式匹配的子串")]),t._v(" "),a("li",[a("code",[t._v("search")]),t._v("：检索与正则表达式匹配的值")]),t._v(" "),a("li",[a("code",[t._v("split")]),t._v("：把字符串分割为字符串数组")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);