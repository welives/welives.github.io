(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{400:function(v,_,l){"use strict";l.r(_);var e=l(25),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"循环语句"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[v._v("#")]),v._v(" 循环语句")]),v._v(" "),l("ul",[l("li",[l("p",[l("strong",[v._v("while")])]),v._v(" "),l("ul",[l("li",[v._v("语法 "),l("code",[v._v("while (条件表达式) { //循环执行代码段 }")])]),v._v(" "),l("li",[v._v("流程\n"),l("ol",[l("li",[v._v("判断条件表达式的值")]),v._v(" "),l("li",[v._v("当值为"),l("code",[v._v("true")]),v._v("时循环执行代码段")]),v._v(" "),l("li",[v._v("当值为"),l("code",[v._v("false")]),v._v("时退出循环体")])])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("先检查条件，再执行循环体")]),v._v(" "),l("li",[v._v("条件不满足则循环一次也不执行")])])]),v._v(" "),l("li",[v._v("时机\n"),l("ul",[l("li",[v._v("一个动作被重复执行到满足某个条件时")])])])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("do-while")])]),v._v(" "),l("ul",[l("li",[v._v("语法 "),l("code",[v._v("do { //代码执行主体 } while (条件表达式)")])]),v._v(" "),l("li",[v._v("流程\n"),l("ol",[l("li",[v._v("先执行循环体内代码再进行判断")]),v._v(" "),l("li",[v._v("如果表达式的值为"),l("code",[v._v("true")]),v._v("，则重复执行代码段")]),v._v(" "),l("li",[v._v("如果表达式的值为"),l("code",[v._v("false")]),v._v("，则退出循环体")])])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("先执行循环体，再进行条件判断")]),v._v(" "),l("li",[v._v("循环体内代码至少执行一次")])])]),v._v(" "),l("li",[v._v("时机\n"),l("ul",[l("li",[v._v("希望一个动作至少被执行依次时")])])])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("for")])]),v._v(" "),l("ul",[l("li",[v._v("语法 "),l("code",[v._v("for (var i = 0; i < length; i++){//代码执行的主体}")])]),v._v(" "),l("li",[v._v("流程\n"),l("ol",[l("li",[v._v("用循环变量初始值与循环条件相比较，确定返回值")]),v._v(" "),l("li",[v._v("如果返回值为"),l("code",[v._v("true")]),v._v("则执行循环体")]),v._v(" "),l("li",[v._v("执行完一次后进行递增/递减运算")]),v._v(" "),l("li",[v._v("将运算结果与循环条件相比较")]),v._v(" "),l("li",[v._v("如果返回值还是"),l("code",[v._v("true")]),v._v("则继续执行循环体；如果返回值为"),l("code",[v._v("false")]),v._v("则退出循环体")])])]),v._v(" "),l("li",[v._v("时机\n"),l("ul",[l("li",[v._v("重复一个动作到一定次数时")])])])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("for-in")])]),v._v(" "),l("ul",[l("li",[v._v("语法 "),l("code",[v._v("for (var value in object){//代码执行主体}")])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("遍历对象的可枚举属性")]),v._v(" "),l("li",[v._v("对象和数组都能使用")])])]),v._v(" "),l("li",[l("strong",[v._v("注意事项")]),v._v(" "),l("ul",[l("li",[v._v("循环输出的属性顺序不可预知")]),v._v(" "),l("li",[v._v("对象的值不能是"),l("code",[v._v("null")]),v._v("或者"),l("code",[v._v("undefined")])])])])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("for-of")])]),v._v(" "),l("ul",[l("li",[v._v("语法 "),l("code",[v._v("for (var value of object){//代码执行主体}")])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("遍历具有"),l("code",[v._v("Iterator")]),v._v("接口的数据结构")]),v._v(" "),l("li",[v._v("普通对象使用会报错，除非该对象拥有"),l("code",[v._v("Iterator")]),v._v("接口")])])])])])]),v._v(" "),l("blockquote",[l("p",[v._v("原生具备"),l("code",[v._v("Iterator")]),v._v("接口的数据结构如下："),l("code",[v._v("Array")]),v._v("、"),l("code",[v._v("Map")]),v._v("、"),l("code",[v._v("Set")]),v._v("、"),l("code",[v._v("String")]),v._v("、"),l("code",[v._v("TypedArray")]),v._v("、函数的"),l("code",[v._v("arguments")]),v._v("对象、"),l("code",[v._v("NodeList")]),v._v("对象")])]),v._v(" "),l("h2",{attrs:{id:"跳转语句"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#跳转语句"}},[v._v("#")]),v._v(" 跳转语句")]),v._v(" "),l("ul",[l("li",[l("code",[v._v("return")]),v._v("：终止函数体的运行，并返回一个值")]),v._v(" "),l("li",[l("code",[v._v("break")]),v._v("：终止整个循环，不再进行判断")]),v._v(" "),l("li",[l("code",[v._v("continue")]),v._v("：结束本次循环，接着去判断是否执行下次循环")])]),v._v(" "),l("h2",{attrs:{id:"选择语句"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#选择语句"}},[v._v("#")]),v._v(" 选择语句")]),v._v(" "),l("blockquote",[l("p",[v._v("选择语句，有三个，if 和 switch、?:三目运算符")])]),v._v(" "),l("h4",{attrs:{id:"if"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[v._v("#")]),v._v(" if")]),v._v(" "),l("ul",[l("li",[v._v("句法 "),l("code",[v._v("if(条件表达式1){ 代码段1 }else if(条件表达式2){ 代码段2 }else{ 代码段3 }")])]),v._v(" "),l("li",[v._v("流程\n"),l("ol",[l("li",[v._v("判断条件 1，如果返回值为"),l("code",[v._v("true")]),v._v("则执行代码段 1")]),v._v(" "),l("li",[v._v("如果条件 1 的返回值为"),l("code",[v._v("false")]),v._v("，则跳过语句块 1 并检测条件 2")]),v._v(" "),l("li",[v._v("如果所有表达式的值均为"),l("code",[v._v("false")]),v._v("则执行"),l("code",[v._v("else")]),v._v("后面的语句（"),l("code",[v._v("else")]),v._v("的这个语句为非必须的，可以不写）")])])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("结果复杂可嵌套")]),v._v(" "),l("li",[v._v("可检测多个条件表达式")]),v._v(" "),l("li",[v._v("表达式的值具有线性特征")]),v._v(" "),l("li",[v._v("表达式的值的动态的")]),v._v(" "),l("li",[v._v("适用于任意类型的数据")]),v._v(" "),l("li",[v._v("可处理复杂的逻辑关系(代码的逼格低，多重判断可用 "),l("code",[v._v("switch case")]),v._v(" 代替)")])])])]),v._v(" "),l("h4",{attrs:{id:"switch"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[v._v("#")]),v._v(" switch")]),v._v(" "),l("ul",[l("li",[v._v("句法 "),l("code",[v._v("switch(条件表达式){ case 标签1: 代码段1 break; …… default: 代码段n; }")])]),v._v(" "),l("li",[v._v("流程\n"),l("ol",[l("li",[v._v("计算表达式的值，并与各标签相比较")]),v._v(" "),l("li",[v._v("若找到与之匹配的标签，则执行其后面的代码段")]),v._v(" "),l("li",[v._v("弱没有找到与之匹配的标签，则直接执行"),l("code",[v._v("default")]),v._v("之后的代码段("),l("code",[v._v("default")]),v._v("是非必须的)")])])]),v._v(" "),l("li",[v._v("格式\n"),l("ul",[l("li",[l("code",[v._v("case")]),v._v("标签为常量，可以是字符串或数字")]),v._v(" "),l("li",[v._v("每个标签均为冒号"),l("code",[v._v(":")]),v._v("结束")]),v._v(" "),l("li",[v._v("虽然"),l("code",[v._v("break")]),v._v("与"),l("code",[v._v("default")]),v._v("为可选项，但为了逻辑清晰最好不要省略")]),v._v(" "),l("li",[l("code",[v._v("case")]),v._v("标签的值必须和条件表达式的值完全匹配")])])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("结构简洁，专为多重选择设计")]),v._v(" "),l("li",[v._v("仅可测试一条条件表达式")]),v._v(" "),l("li",[v._v("表达式的值具有离散型")]),v._v(" "),l("li",[v._v("表达式的值是固定的，不会动态变化的")]),v._v(" "),l("li",[v._v("仅能应用整数，枚举，字符串等类型数据")]),v._v(" "),l("li",[v._v("仅能处理多个枚举型逻辑关系")])])])]),v._v(" "),l("h2",{attrs:{id:"异常处理语句"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#异常处理语句"}},[v._v("#")]),v._v(" 异常处理语句")]),v._v(" "),l("ul",[l("li",[l("code",[v._v("throw")]),v._v("：主动抛出异常")]),v._v(" "),l("li",[l("code",[v._v("try")]),v._v("：指明需要处理的代码段")]),v._v(" "),l("li",[l("code",[v._v("catch")]),v._v("：捕获异常")]),v._v(" "),l("li",[l("code",[v._v("finally")]),v._v("：后期处理，无论出不出错都会执行")])])])}),[],!1,null,null,null);_.default=i.exports}}]);