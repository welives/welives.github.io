(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{422:function(t,s,e){"use strict";e.r(s);var n=e(25),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"部署上线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署上线"}},[t._v("#")]),t._v(" 部署上线")]),t._v(" "),e("p",[t._v("说了这么多都是在本地进行的，现在我们要把本地的内容推送到某个服务器上，这样只要有网络，就可以随时随地看自己的网站了")]),t._v(" "),e("p",[e("strong",[t._v("本文主要讲解如何使用 Github page 服务和 Gitee page 服务")])]),t._v(" "),e("p",[t._v("这两个服务你可以任选其中一个，也可以两个同时部署。因为众所周知的原因，github 的访问速度一直不是很理想，而国内的 gitee 的访问速度还不错，所以我选择两个同时部署")]),t._v(" "),e("h3",{attrs:{id:"首先-到-github-上新建仓库-username-github-io-不用克隆到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#首先-到-github-上新建仓库-username-github-io-不用克隆到本地"}},[t._v("#")]),t._v(" 首先，到 github 上新建仓库 USERNAME.github.io（不用克隆到本地）")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[e("strong",[t._v("USERNAME")]),t._v(" 必须是你 Github 的账号名称(或者你的 Github 个性地址名)，不是你的名字拼音，也不是你的非主流网名，不要瞎起，要保证和 Github 账号名一模一样！")])]),t._v(" "),e("p",[t._v("例如我的 Github 账号名称是 welives，我的 Github 个性地址是"),e("a",{attrs:{href:"https://github.com/welives",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/welives"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("那么我要新建的仓库名就是 "),e("strong",[t._v("welives.github.io")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/vuepress部署/github.page.jpg")}}),t._v(" "),e("blockquote",[e("p",[t._v("不要在意上面图片的错误提示，因为我已经创建过这个仓库了，所以会提示仓库已存在")])]),t._v(" "),e("p",[e("strong",[t._v("这个仓库建好后，不用克隆到本地，内容更新修改都在下面的 web-notes 仓库中进行")])]),t._v(" "),e("h3",{attrs:{id:"接着-到-gitee-上新建仓库-username-不用克隆到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#接着-到-gitee-上新建仓库-username-不用克隆到本地"}},[t._v("#")]),t._v(" 接着，到 gitee 上新建仓库 USERNAME（不用克隆到本地）")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[e("strong",[t._v("USERNAME")]),t._v(" 必须是你的 Gitee 个性地址名，不是你的名字拼音，也不是你的非主流网名，不要瞎起，要保证和 Gitee 个性地址名一模一样！")])]),t._v(" "),e("p",[t._v("例如我的 Gitee 个性地址是"),e("a",{attrs:{href:"https://gitee.com/welives",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/welives"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("那么我要新建的仓库名就是 "),e("strong",[t._v("welives")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/vuepress部署/gitee.page.jpg")}}),t._v(" "),e("blockquote",[e("p",[t._v("不要在意上面图片的错误提示，因为我已经创建过这个仓库了，所以会提示仓库已存在")])]),t._v(" "),e("p",[e("strong",[t._v("这个仓库建好后，不用克隆到本地，内容更新修改都在下面的 web-notes 仓库中进行")])]),t._v(" "),e("h3",{attrs:{id:"最后再到-github-上新建一个仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最后再到-github-上新建一个仓库"}},[t._v("#")]),t._v(" 最后再到 Github 上新建一个仓库")]),t._v(" "),e("ul",[e("li",[t._v("随便起一个名字，比如：web-notes（克隆到本地）\n"),e("ul",[e("li",[t._v("这个项目是用来开发博客的，以后只需要改这个项目就够了")])])]),t._v(" "),e("li",[t._v("在你的项目根目录中，创建一个如下的 deploy.sh 文件")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保脚本抛出遇到的错误")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成静态文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run docs:build\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入生成的文件夹")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" docs/.vuepress/dist\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是发布到自定义域名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo 'www.example.com' > CNAME")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" -\n")])])]),e("ul",[e("li",[t._v("修改 deploy.sh 脚本内容\n"),e("ul",[e("li",[t._v("把文件中的 USERNAME 改成 Github 账号名，例如我的账号名是 welives，那么就可以改为："),e("strong",[t._v("git push -f git@github.com:welives/welives.github.io.git master")])]),t._v(" "),e("li",[t._v("添加 Gitee 的仓库链接，比如我的是："),e("strong",[t._v("git push -f https://gitee.com/welives/welives.git master")])])])])]),t._v(" "),e("p",[t._v("这样开发仓库就和部署仓库就建立了关联")]),t._v(" "),e("p",[t._v("简单说二者的关系是：部署仓库负责显示网站内容，我们不需要改动它；日常开发和新增内容，都在开发仓库中进行，并通过 "),e("code",[t._v("npm run deploy")]),t._v(" 命令，将打包好的代码发布到部署仓库")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保脚本抛出遇到的错误")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成静态文件，这个命令参考你的package.json中的命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入生成的文件夹")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" docs/.vuepress/dist\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是发布到自定义域名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo 'www.example.com' > CNAME")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f git@github.com:welives/welives.github.io.git master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f https://gitee.com/welives/welives.git master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" -\n\n")])])]),e("ul",[e("li",[t._v("在 package.json 文件夹中添加发布命令")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deploy"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash deploy.sh"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("执行发布命令前检查一下你的 Github 是否已经添加过 ssh key\n"),e("ul",[e("li",[t._v("如果不会创建 ssh key 的话，去百度，上面有你想要的")])])])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/vuepress部署/github-sshkey.jpg")}}),t._v(" "),e("ul",[e("li",[t._v("最后执行 "),e("code",[t._v("npm run deploy")]),t._v("，打包好的代码就会自动发布到部署仓库中去了\n"),e("ul",[e("li",[t._v("发布到 Github 的时候，需要添加 ssh key，确保你的 Github 已经添加了 ssh key")]),t._v(" "),e("li",[t._v("Github page 服务会自动识别仓库根目录中的 index.html，如果有就显示静态页面")]),t._v(" "),e("li",[t._v("Gitee page 服务默认是关闭的。当你第一次发布代码到 gitee 仓库后，需求自行去开启服务，之后每次更新代码到仓库时需要去手动点击更新")])])])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/vuepress部署/启用和更新gitee.page.jpg")}}),t._v(" "),e("p",[t._v("此时打开 "),e("a",{attrs:{href:"https://welives.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github page"),e("OutboundLink")],1),t._v(" 和"),e("a",{attrs:{href:"http://welives.gitee.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitee page"),e("OutboundLink")],1),t._v("，就能看到部署好的静态页面博客了")]),t._v(" "),e("p",[e("strong",[t._v("PC 端页面是这样的")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/vuepress部署/pc-preview.jpg")}}),t._v(" "),e("p",[e("strong",[t._v("手机端页面是这样的")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/vuepress部署/mobile-preview.jpg")}})])}),[],!1,null,null,null);s.default=a.exports}}]);